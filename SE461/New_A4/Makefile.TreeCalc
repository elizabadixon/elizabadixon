#----------------------------------------------------------------------------
#       Macros
#----------------------------------------------------------------------------
CC            = gcc
CXX           = g++
LD            = $(CXX) $(CCFLAGS) $(CPPFLAGS)
AR            = ar
PICFLAGS      = -fPIC
CPPFLAGS      = $(PICFLAGS) $(GENFLAGS) -D_REENTRANT
OBJEXT        = .o
OUTPUT_OPTION = -o "$@"
COMPILE.c     = $(CC) $(CFLAGS) $(CPPFLAGS) -c
COMPILE.cc    = $(CXX) $(CCFLAGS) $(CPPFLAGS) -c
LDFLAGS       = -L"."
CCC           = $(CXX)
MAKEFILE      = Makefile.TreeCalc
DEPENDENCIES  = .depend.$(MAKEFILE)
BTARGETDIR    = ./
BIN           = $(BTARGETDIR)tree$(EXESUFFIX)$(EXEEXT)
CAT           = cat
MV            = mv -f
RM            = rm -rf
CP            = cp -p
NUL           = /dev/null
MKDIR         = mkdir -p
TESTDIRSTART  = test -d
TESTDIREND    = ||
TOUCH         = touch
EXEEXT        = 
LIBPREFIX     = lib
LIBSUFFIX     = 
GENFLAGS      = -O
LDLIBS        = -ldl $(subst lib,-l,$(sort $(basename $(notdir $(wildcard /usr/lib/librt.so /lib/librt.so))))) -lpthread
OBJS          = driverTree$(OBJEXT) Binary_Op_Comm$(OBJEXT) Add_Expr_Node$(OBJEXT) Subtract_Expr_Node$(OBJEXT) Mult_Expr_Node$(OBJEXT) Div_Expr_Node$(OBJEXT) Mod_Expr_Node$(OBJEXT) Num_Expr_Node$(OBJEXT) Expr_Tree_Builder$(OBJEXT) Expr_Tree_Visitor$(OBJEXT)
SRC           = driverTree.cpp Binary_Op_Comm.cpp Add_Expr_Node.cpp Subtract_Expr_Node.cpp Mult_Expr_Node.cpp Div_Expr_Node.cpp Mod_Expr_Node.cpp Num_Expr_Node.cpp Expr_Tree_Builder.cpp Expr_Tree_Visitor.cpp
LINK.cc       = $(LD) $(LDFLAGS)
EXPORTFLAGS   = 
DEPLIBS       = $(foreach lib, , $(foreach libpath, ., $(wildcard $(libpath)/lib$(lib).a)))

#----------------------------------------------------------------------------
#       Local targets
#----------------------------------------------------------------------------

all: $(BIN)

$(BIN): $(OBJS) $(DEPLIBS)
	@$(TESTDIRSTART) "$(BTARGETDIR)" $(TESTDIREND) $(MKDIR) "$(BTARGETDIR)"
	$(LINK.cc) $(OBJS) $(LDLIBS) $(OUTPUT_OPTION)

generated: $(GENERATED_DIRTY)
	@-:

driverTree$(OBJEXT): driverTree.cpp
	$(COMPILE.cc) $(EXPORTFLAGS) $(OUTPUT_OPTION) driverTree.cpp

Binary_Op_Comm$(OBJEXT): Binary_Op_Comm.cpp
	$(COMPILE.cc) $(EXPORTFLAGS) $(OUTPUT_OPTION) Binary_Op_Comm.cpp

Add_Expr_Node$(OBJEXT): Add_Expr_Node.cpp
	$(COMPILE.cc) $(EXPORTFLAGS) $(OUTPUT_OPTION) Add_Expr_Node.cpp

Subtract_Expr_Node$(OBJEXT): Subtract_Expr_Node.cpp
	$(COMPILE.cc) $(EXPORTFLAGS) $(OUTPUT_OPTION) Subtract_Expr_Node.cpp

Mult_Expr_Node$(OBJEXT): Mult_Expr_Node.cpp
	$(COMPILE.cc) $(EXPORTFLAGS) $(OUTPUT_OPTION) Mult_Expr_Node.cpp

Div_Expr_Node$(OBJEXT): Div_Expr_Node.cpp
	$(COMPILE.cc) $(EXPORTFLAGS) $(OUTPUT_OPTION) Div_Expr_Node.cpp

Mod_Expr_Node$(OBJEXT): Mod_Expr_Node.cpp
	$(COMPILE.cc) $(EXPORTFLAGS) $(OUTPUT_OPTION) Mod_Expr_Node.cpp

Num_Expr_Node$(OBJEXT): Num_Expr_Node.cpp
	$(COMPILE.cc) $(EXPORTFLAGS) $(OUTPUT_OPTION) Num_Expr_Node.cpp

Expr_Tree_Builder$(OBJEXT): Expr_Tree_Builder.cpp
	$(COMPILE.cc) $(EXPORTFLAGS) $(OUTPUT_OPTION) Expr_Tree_Builder.cpp

Expr_Tree_Visitor$(OBJEXT): Expr_Tree_Visitor.cpp
	$(COMPILE.cc) $(EXPORTFLAGS) $(OUTPUT_OPTION) Expr_Tree_Visitor.cpp

clean:
	-$(RM) $(OBJS)

realclean: clean
	-$(RM) $(BIN)

check-syntax:
	$(COMPILE.cc) $(EXPORTFLAGS) -Wall -Wextra -pedantic -fsyntax-only $(CHK_SOURCES)

#----------------------------------------------------------------------------
#       Dependencies
#----------------------------------------------------------------------------


depend:
	-$(MPC_ROOT)/depgen.pl  $(CFLAGS) $(CCFLAGS) $(CPPFLAGS) -f $(DEPENDENCIES) $(SRC) 2> $(NUL)

-include $(DEPENDENCIES)
