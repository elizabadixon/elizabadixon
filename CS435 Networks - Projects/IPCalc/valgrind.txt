==3634582== Memcheck, a memory error detector
==3634582== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3634582== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==3634582== Command: Calc.exe
==3634582== Parent PID: 3631102
==3634582== 
==3634582== Invalid read of size 4
==3634582==    at 0x10C71C: CIDR::calcNetAddr[abi:cxx11]() (in /home/eadixon/CS435/IPCalc/Calc.exe)
==3634582==    by 0x10A8CB: main (in /home/eadixon/CS435/IPCalc/Calc.exe)
==3634582==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==3634582== 
==3634582== 
==3634582== Process terminating with default action of signal 11 (SIGSEGV)
==3634582==  Access not within mapped region at address 0x0
==3634582==    at 0x10C71C: CIDR::calcNetAddr[abi:cxx11]() (in /home/eadixon/CS435/IPCalc/Calc.exe)
==3634582==    by 0x10A8CB: main (in /home/eadixon/CS435/IPCalc/Calc.exe)
==3634582==  If you believe this happened as a result of a stack
==3634582==  overflow in your program's main thread (unlikely but
==3634582==  possible), you can try to increase the size of the
==3634582==  main thread stack using the --main-stacksize= flag.
==3634582==  The main thread stack size used in this run was 8388608.
==3634582== 
==3634582== HEAP SUMMARY:
==3634582==     in use at exit: 74,968 bytes in 6 blocks
==3634582==   total heap usage: 11 allocs, 5 frees, 75,008 bytes allocated
==3634582== 
==3634582== LEAK SUMMARY:
==3634582==    definitely lost: 0 bytes in 0 blocks
==3634582==    indirectly lost: 0 bytes in 0 blocks
==3634582==      possibly lost: 0 bytes in 0 blocks
==3634582==    still reachable: 74,968 bytes in 6 blocks
==3634582==         suppressed: 0 bytes in 0 blocks
==3634582== Rerun with --leak-check=full to see details of leaked memory
==3634582== 
==3634582== For lists of detected and suppressed errors, rerun with: -s
==3634582== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
